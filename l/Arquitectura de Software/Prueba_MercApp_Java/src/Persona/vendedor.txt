package Persona;

import Data.DataManager;
import static Inventario.Inventario.mostrarInventario;
import Producto.Producto;
import Utils.Input;
import Venta.CalculoConIVA;
import Venta.Venta;
import java.util.List;

/**
 * Esta clase representa al vendedor en el sistema.
 * Permite realizar ventas y ver el historial de ventas.
 */

public class Vendedor {

    public static void menuVendedor() {
        while (true) {
            System.out.print("""
                    \n======================== VENDEDOR =======================
                    1. Nueva venta
                    2. Ver ventas
                    3. Salir
                    =========================================================
                        """);

            int opcion = Input.getInt("Seleccione opción: ");

            switch (opcion) {
                case 1 -> realizarVenta();
                case 2 -> mostrarVentas();
                case 3 -> {
                    return;
                }
                default -> System.out.println("Opción inválida");
            }
        }
    }

    public static void realizarVenta() {

        Venta venta = new Venta(new CalculoConIVA());
        String continuar;

        do{
            // Mostrar inventario actualizado
            mostrarInventario();

            String id = Input.getString("ID Producto a vender: ");

            List<Producto> inventario = DataManager.getInventario();
            boolean productoNoEncontrado = true;

            for (Producto p : inventario) {
                // Verificar si el producto tiene stock disponible y coincide con el ID
                // ingresado
                if (p.getId().equals(id.toUpperCase()) && p.getCantidad() > 0) {
                    productoNoEncontrado = false;
                    int cantidad = Input.getInt("Cantidad: ");

                    // Verificar si hay suficiente stock
                    if (p.getCantidad() >= cantidad) {
                        // Agregar el producto a la venta
                        venta.agregarProducto(p, cantidad);

                        // Actualizar el stock del producto
                        p.setCantidad(p.getCantidad() - cantidad);

                        DataManager.agregarVenta(venta);
                        
                        break;
                    } else {
                        System.out.println("Stock insuficiente!");
                    }
                }
            }
            
            if (productoNoEncontrado) {
                System.out.println("Producto no encontrado.");
            }
            
            // Preguntar si el vendedor desea agregar otro producto
            System.out.print("¿Desea agregar otro producto? (s/n): ");
            continuar = Input.scanner.nextLine();

            if (continuar.equalsIgnoreCase("n")) {
                // Mostrar el total de la venta
                DataManager.agregarVenta(venta);
                System.out.println("Total de la venta: $ " + venta.calcularTotal());
                break;
            }

        }while (continuar.equalsIgnoreCase("s"));
    }

    public static void mostrarVentas() {
        List<Venta> ventas = DataManager.getVentas();

        if (ventas.isEmpty()) {
            System.out.println("No hay ventas registradas.");
            return;
        }

        for (Venta v : ventas) {
            System.out.println(v);
        }
    }

}
